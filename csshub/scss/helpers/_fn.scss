//
// Replace `$search` with `$replace` in `$string`
//
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

//
// Clamp `$number` between `$min` and `$max`
//
@function clamp($number, $min, $max) {
	@return min(max($number, $min), $max);
}

//
// Power function
//
@function pow($x, $n) {
	$ret: 1;

	@if $n >= 0 {
		@for $i from 1 through $n {
			$ret: $ret * $x;
		}
	} @else {
		@for $i from $n to 0 {
			$ret: $ret / $x;
		}
	}

	@return $ret;
}

//
// toFixed() function in Sass
//
@function to-fixed($float, $digits: 2) {
	$sass-precision: 5;

	@if $digits > $sass-precision {
		@warn "Sass sets default precision to #{$sass-precision} digits, and there is no way to change that for now."
		+ "The returned number will have #{$sass-precision} digits, even if you asked for `#{$digits}`."
		+ "See https://github.com/sass/sass/issues/1122 for further informations.";
	}

	$pow: pow(10, $digits);
	@return round($float * $pow) / $pow;
}

//
// Remove the unit of a length
//
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

//
// Slightly lighten a color
//
@function tint($color, $percentage) {
	@return mix(white, $color, $percentage);
}

//
// Slightly darken a color
//
@function shade($color, $percentage) {
	@return mix(black, $color, $percentage);
}